[{"/Users/Lily/Downloads/ttnewyork/src/index.js":"1","/Users/Lily/Downloads/ttnewyork/src/reportWebVitals.js":"2","/Users/Lily/Downloads/ttnewyork/src/App.js":"3","/Users/Lily/Downloads/ttnewyork/src/containers/GameBoard.js":"4","/Users/Lily/Downloads/ttnewyork/src/containers/PlayerSelect.js":"5","/Users/Lily/Downloads/ttnewyork/src/components/Players.js":"6","/Users/Lily/Downloads/ttnewyork/src/components/CardDeck.js":"7","/Users/Lily/Downloads/ttnewyork/src/containers/CardSelect.js":"8","/Users/Lily/Downloads/ttnewyork/src/components/data.js":"9"},{"size":500,"mtime":1607207946096,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607207946097,"results":"12","hashOfConfig":"11"},{"size":2617,"mtime":1607277548590,"results":"13","hashOfConfig":"11"},{"size":4273,"mtime":1607270348926,"results":"14","hashOfConfig":"11"},{"size":2264,"mtime":1607263292949,"results":"15","hashOfConfig":"11"},{"size":494,"mtime":1607263939235,"results":"16","hashOfConfig":"11"},{"size":704,"mtime":1607259924046,"results":"17","hashOfConfig":"11"},{"size":1539,"mtime":1607280560403,"results":"18","hashOfConfig":"11"},{"size":6005,"mtime":1607276531806,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ajrlhe",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Lily/Downloads/ttnewyork/src/index.js",[],["40","41"],"/Users/Lily/Downloads/ttnewyork/src/reportWebVitals.js",[],"/Users/Lily/Downloads/ttnewyork/src/App.js",["42"],"/Users/Lily/Downloads/ttnewyork/src/containers/GameBoard.js",["43","44","45","46"],"import React, { Component } from \"react\";\n//import CardDeck from \"../components/CardDeck\";\nimport Players from \"../components/Players\";\nimport CardSelect from './CardSelect';\n\nclass GameBoard extends Component {\n    state = {\n        squares: [],\n        grid_size: 6\n    };\n\n    componentDidMount() {\n        // generate board and set state once\n        const squares = this.createSquares();\n        this.setState({\n            squares\n        });\n    }\n\ncreateSquares() {\n    const {players} = this.props;\n    const [ player_1, player_2 ] = players;\n    const { grid_size } = this.state;\n\n    const squares = [{\n        row: 1,\n        col: 1,\n        type: 'start'\n    }];\n\n    let i = 1;\n    let row = 1;\n    let col = 2;\n    const total_squares = (grid_size * 2 + ((grid_size - 2) * 2));\n    while (squares.length < total_squares) {\n      const square = {\n        row,\n        col\n      };\n\n      // define which square spaces speak to which categories\n      if (i === 1) {\n        square.type = 'coursePlanning';\n      } else if (i === 2 || i === 6 || i === 9 || i === 11 || i === 15) {\n        square.type = 'academics';\n      } else if (i === 4 || i === 7 || i === 14) {\n        square.type = 'supplies';\n      } else if (i === 3 || i === 8 || i === 10 || i === 13) {\n        square.type = \"financialEnv\";\n      } else {\n        square.type = \"tip\";\n      }\n\n      squares.push(square);\n      i++;\n\n      if(i < grid_size) {\n          col++;\n      } else if (i < 2 * grid_size - 1) {\n          row++;\n      } else if (i < 3 * grid_size - 2) {\n          col--;\n      } else {\n          row--;\n      }\n    }\n      return squares;\n}\n/*\nsetCard {\n  this.state.cards = square.type;\n}\n*/\nrollDie = () => {\n    const dice = ['⚀', '⚁', '⚂', '⚃', '⚄', '⚅'];\n    const index = Math.floor(dice.length * Math.random());\n    const rolledNumber = dice[index];\n    this.setState({\n      rolledNumber\n    });\n\n    this.props.movePlayer(index + 1, this.state.squares);\n} \n\n    render() {\n        const { grid_size } = this.state;\n        let playerLocations = [];\n        if (this.state.squares.length > 0) {\n            playerLocations = this.props.players.map(player =>\n                this.state.squares[player.location % this.state.squares.length]);\n        }\n        return (\n          <div className=\"game-area\">\n          <div\n            className=\"game-board\"\n            style={{\n              gridTemplate: `repeat(${grid_size}, 1fr) /repeat(${grid_size}, 1fr)`,\n            }}\n          >\n            {this.state.squares.map((square, i) => (\n              <div\n                style={{\n                  gridRow: square.row,\n                  gridColumn: square.col,\n                }}\n                key={i}\n                className=\"game-square\"\n              >\n                {square.type !== \"start\" ? (\n                  <img alt={square.type} src={`./images/${square.type}.png`} />\n                ) : (\n                  <p>START of the year</p>\n                )}\n              </div>\n            ))}\n            {playerLocations.map((location, i) => {\n              const player = this.props.players[i];\n              return (\n                <div\n                  key={player.number}\n                  style={{\n                    gridRow: location.row,\n                    gridColumn: location.col,\n                  }}\n                  className=\"player-avatar\"\n                >\n                  <img\n                    className=\"persona\"\n                    alt={player.number}\n                    src={`./personas/${player.persona}-persona.png`}\n                  />\n                </div>\n              );\n            })}\n            <div className=\"board-center-inside-square\">\n              <h4>Player {this.props.currentPlayer}, roll the die!</h4>\n              <p className=\"rolled-die\">{this.state.rolledNumber}</p>\n              <button onClick={this.rollDie} className=\"button\">Roll</button>\n            </div>\n          </div>\n          {\n            this.props.square ?\n            <CardSelect className=\"card-deck\" player={this.props.square.player} type={this.props.square.type}/> :\n            <img className=\"card-deck\" src={`./images/logo.png`}/>\n          }\n          </div>\n        );\n    }\n}\n\nexport default GameBoard;","/Users/Lily/Downloads/ttnewyork/src/containers/PlayerSelect.js",[],"/Users/Lily/Downloads/ttnewyork/src/components/Players.js",[],"/Users/Lily/Downloads/ttnewyork/src/components/CardDeck.js",[],"/Users/Lily/Downloads/ttnewyork/src/containers/CardSelect.js",["47","48","49","50","51","52","53"],"/Users/Lily/Downloads/ttnewyork/src/components/data.js",["54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":7,"column":8,"nodeType":"61","messageId":"62","endLine":7,"endColumn":18},{"ruleId":"59","severity":1,"message":"63","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":15},{"ruleId":"59","severity":1,"message":"64","line":22,"column":13,"nodeType":"61","messageId":"62","endLine":22,"endColumn":21},{"ruleId":"59","severity":1,"message":"65","line":22,"column":23,"nodeType":"61","messageId":"62","endLine":22,"endColumn":31},{"ruleId":"66","severity":1,"message":"67","line":144,"column":13,"nodeType":"68","endLine":144,"endColumn":67},{"ruleId":"59","severity":1,"message":"69","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":12},{"ruleId":"59","severity":1,"message":"70","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":17},{"ruleId":"59","severity":1,"message":"71","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":15,"column":25,"nodeType":"74","messageId":"75","endLine":15,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":17,"column":30,"nodeType":"74","messageId":"75","endLine":17,"endColumn":32},{"ruleId":"72","severity":1,"message":"73","line":19,"column":30,"nodeType":"74","messageId":"75","endLine":19,"endColumn":32},{"ruleId":"72","severity":1,"message":"73","line":21,"column":30,"nodeType":"74","messageId":"75","endLine":21,"endColumn":32},{"ruleId":"59","severity":1,"message":"76","line":1,"column":7,"nodeType":"61","messageId":"62","endLine":1,"endColumn":11},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'CardSelect' is defined but never used.","Identifier","unusedVar","'Players' is defined but never used.","'player_1' is assigned a value but never used.","'player_2' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is defined but never used.","'GameBoard' is defined but never used.","'CardDeck' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]